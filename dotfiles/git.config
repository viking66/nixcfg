[core]
    trustctime = false
    pager = delta
    editor = hx
	excludesFile = ~/.config/git/ignore
[user]
    name = Jason Davidson
    email = jad658@gmail.com
[merge]
    conflictstyle = zdiff3
[mergetool "meld"]
    cmd = "$LOCAL" "$REMOTE"
[push]
    default = simple
[alias]
    d = diff
    m = merge --ff-only
    st = status -sb
    ci = commit
    br = branch
    co = checkout
	fm = fetch origin main:main
    save = "!f() { git stash save $1$(date +'(%Y.%m.%d %H:%M)'); }; f"
    sync = pull --rebase
    lg = log origin/HEAD..HEAD --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
    lg-all  = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
    lgg = log --color --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --no-abbrev-commit --
    dag = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)\"%an\" <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
	p = "!git push -u origin $(git branch --show-current)"
    wadd = "!f() { git worktree add $1 && exec cd $1; }; f"
    wrm = "!f() { git worktree remove $1 && git branch -d $1; }; f"
    clone-work = "!f() { git clone --bare git@github-work:vesal-security/$1.git .bare && echo \"gitdir: ./.bare\" > .git && git config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"; }; f"
    clone-jd = "!f() { git clone git@github:$1/$2.git; }; f"
	fu = "!f() { target=$1; if [ -z \"$target\" ]; then echo 'Usage: git fu <commit-hash or part of message>'; exit 1; fi; resolved=$(git log --grep=\"$target\" --format='%h' -n 1 2>/dev/null); if [ -z \"$resolved\" ]; then resolved=$(git rev-parse --short $target 2>/dev/null); fi; if [ -z \"$resolved\" ]; then echo \"Could not find commit for '$target'\"; exit 1; fi; echo \"Fixup target: $resolved\"; git commit --fixup=$resolved && git stash -u && git rebase -i --autosquash ${resolved}^ && git stash pop; }; f"
[color]
    ui = true
    diff = auto
    status = auto
    branch = auto
[init]
    templatedir = ~/.git_template
	defaultBranch = main
[credential]
    helper = cache
[mergetool]
	prompt = false
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true
	dark = true
	syntax-theme = Nord
	line-numbers = true
